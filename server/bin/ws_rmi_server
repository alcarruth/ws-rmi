#!/bin/bash

NODE_ROOT="/opt/node"
export PATH="$NODE_ROOT/bin:$PATH"
export NODE_PATH="$NODE_ROOT/lib/node_modules"

APP_NAME="ws_rmi_server"
APP_DIR="/var/www/git/projects/ws_rmi/example";
APP_CMD="coffee ${APP_DIR}/server.coffee";

#------------------------------------------------------------------------------------
# everything below is completely generic and depends only on 
# the settings above

LOG_FILE="/var/log/alcarruth/${APP_NAME}.log"
PID_FILE="/var/run/alcarruth/${APP_NAME}.pid"

function start_server {

   if [ ! -s $PID_FILE ] ; then
      cd ${APP_DIR}
		  nohup ${APP_CMD} > ${LOG_FILE} 2>&1 &
		  PID="$!"
		  echo ${PID} > ${PID_FILE}
		  echo "server started, pid: $PID"

	 else
		  echo "server already running"
		  exit 1
	 fi
}

function stop_server {

	 if [ -s ${PID_FILE} ]; then
		  PID=$(cat ${PID_FILE})
		  echo "stopping server, pid: $PID"
		  kill ${PID}
		  rm ${PID_FILE}

	 else
		  echo "server not running"
		  exit 1
	 fi
}

function server_status {

	 if [ -s ${PID_FILE} ]; then
		  PID=$(cat ${PID_FILE})
		  echo "server running, pid: $PID"

	 else
		  echo "server not running."
	 fi
}

function show_log {
    
	 if [ -s ${LOG_FILE} ]; then
		  cat ${LOG_FILE}

    else
		  echo "no log file"
    fi
}

if [ "$UID" != "0" ] ; then
    echo "You must be root to run $0" ;
    exit;
fi

case $1 in

	  start)
		    start_server
		    ;;
	  stop)
		    stop_server
		    ;;
	  restart)
		    stop_server
		    start_server
		    ;;
	  status)
		    server_status
		    ;;
    log)
		    show_log
		    ;;
	  *)
		    echo "Usage: $0 {start|stop|restart|status|log}"
		    exit 1
		    ;;
esac

exit 0
