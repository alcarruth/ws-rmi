'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 2.3.2
(function () {
  var StackApp, Stack_Stub, WS_RMI_Client;

  WS_RMI_Client = WS_RMI_Client || require('./ws_rmi_client.coffee').WS_RMI_Client;

  Stack_Stub = Stack_Stub || require('./example_object.coffee').Stack_Stub;

  StackApp = function () {
    function StackApp() {
      var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ws://localhost:8085';

      _classCallCheck(this, StackApp);

      this.connect = this.connect.bind(this);
      this.disconnect = this.disconnect.bind(this);
      this.def_cb = this.def_cb.bind(this);
      this.push = this.push.bind(this);
      this.pop = this.pop.bind(this);
      this.url = url;
      this.client = new WS_RMI_Client(this.url);
      this.stack = new Stack_Stub('br549');
      this.client.register(this.stack);
    }

    _createClass(StackApp, [{
      key: 'connect',
      value: function connect() {
        return this.client.connect();
      }
    }, {
      key: 'disconnect',
      value: function disconnect() {
        return this.client.disconnect();
      }
    }, {
      key: 'def_cb',
      value: function def_cb(x) {
        return console.log([x]);
      }
    }, {
      key: 'push',
      value: function push(x) {
        var cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.def_cb;

        return this.stack.push(x, cb);
      }
    }, {
      key: 'pop',
      value: function pop() {
        var cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.def_cb;

        return this.stack.pop(cb);
      }
    }]);

    return StackApp;
  }();

  if (typeof window !== "undefined" && window !== null) {
    window.app = new StackApp('wss://armazilla.net/wss/rmi_example');
  } else {
    exports.app = new StackApp('wss://armazilla.net/wss/rmi_example');
  }
}).call(undefined);

//# sourceURL=/home/carruth/git/ws_rmi/build/coffee/client_example.coffee