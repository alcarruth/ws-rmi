// Generated by CoffeeScript 2.4.1
(function() {
  //!/bin/env/ coffee

  // ws_rmi_client

  // works both in browser and in node
  var WS_RMI_Client, WS_RMI_Connection, WebSocket;

  WebSocket = (typeof window !== "undefined" && window !== null ? window.WebSocket : void 0) || require('ws');

  ({WS_RMI_Connection} = require('./app'));

  WS_RMI_Client = class WS_RMI_Client {
    // Connnection should be a sub-class of WS_RMI_Connection in order to
    // create and register desired WS_RMI_Objects at construction.

    constructor(options, objects, Connection) {
      this.connect = this.connect.bind(this);
      this.objects = objects;
      this.Connection = Connection || WS_RMI_Connection;
      this.id = `WS_RMI_Client-${(Math.random().toString().slice(2))}`;
      ({host: this.host, port: this.port, path: this.path, protocol: this.protocol, log_level: this.log_level} = options);
      this.url = `${this.protocol}://${this.host}:${this.port}/${this.path}`;
    }

    connect(url) {
      var error, msg, ws;
      try {
        if (url) {
          this.url = url;
        }
        ws = new WebSocket(this.url);
        this.connection = new this.Connection(this, ws, this.log_level);
        console.log(`Connection added, id: ${this.connection.id}`);
      } catch (error1) {
        error = error1;
        msg = "\nWS_RMI_Client: connect failed.";
        msg += ` url: ${this.url}`;
        return new Error(msg);
      }
    }

  };

  exports.WS_RMI_Client = WS_RMI_Client;

}).call(this);
